name: CI

# se ejecuta cuando se hace cada push a develop o feature
on:
  push:
    branches:
      - develop
      - feature/*
  pull_request:
    branches:
      - develop
 
jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # escaneo para uso de anti plageo
      - name: Escaneo anti-plagio
        run: |
          grep -RIE \
            --exclude-dir=.git \
            --exclude-dir=.github \
            --exclude='CI.yaml' \
            -e "chatgpt" \
            -e "bard" \
            -e "llama" \
            -e "as an ai" \
            -e "ðŸ§©" \
            -e "ðŸ§ " \
            -e "âœ…" \
            -e "ðŸ§ª" \
            . && exit 1 || exit 0

      # detectar duplicaciÃ³n con jscpd
      - name: Instalar Node.js y jscpd
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Ejecutar jscpd
        run: |
          npm install -g jscpd
          jscpd --threshold 30 . || exit 1

      # ejecutar pytest
      - name: Configurar Python y dependencias
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Instalar requisitos y pytest
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-mock
      - name: Ejecutar pruebas
        run: pytest --maxfail=1 --disable-warnings -q

      # lint de scripts 
      - name: Instalar shellcheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: Lintear scripts .sh
        run: find . -name '*.sh' -print0 | xargs -0 shellcheck

      # descarga y validar manifiestos k8s
      - name: Instalar kubeconform
        run: |
          curl -sSL -o kubeconform.tar.gz \
            https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz
          tar -zxvf kubeconform.tar.gz
          sudo mv kubeconform /usr/local/bin/
      - name: Validar manifiesto K8s
        run: kubeconform -strict -summary deployment.yaml

      # construiccion de la imagen
      - name: construir imagen docker
        run: docker build -t adaptador-ci:latest ./simple-app
